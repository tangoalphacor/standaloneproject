import React, { useState } from 'react';
import { Editor } from '@monaco-editor/react';
import { Copy, Download, FileText, TestTube, Check } from 'lucide-react';
import type { VerilogCode, RAMConfig } from '../types';

interface CodeDisplayProps {
  verilogCode: VerilogCode;
  ramConfig: RAMConfig;
}

const CodeDisplay: React.FC<CodeDisplayProps> = ({ verilogCode, ramConfig }) => {
  const [activeTab, setActiveTab] = useState<'module' | 'testbench'>('module');
  const [copied, setCopied] = useState<string | null>(null);

  const currentCode = activeTab === 'module' ? verilogCode.module : verilogCode.testbench;
  const filename = activeTab === 'module' 
    ? `ram_${ramConfig.size.toLowerCase()}.v`
    : `ram_${ramConfig.size.toLowerCase()}_tb.v`;

  const handleCopy = async (code: string, type: string) => {
    try {
      await navigator.clipboard.writeText(code);
      setCopied(type);
      setTimeout(() => setCopied(null), 2000);
    } catch (err) {
      console.error('Failed to copy:', err);
    }
  };

  const handleDownload = (code: string, filename: string) => {
    const copyrightHeader = `/*
 * Generated by Verilog RAM Generator
 * Created by: Abhinav Kannan (abhinavkannan434@gmail.com)
 * Date: ${new Date().toLocaleDateString()}
 * 
 * LICENSE: MIT License - Free for educational and commercial use
 * 
 * This Verilog code is generated automatically and is provided "as is"
 * without warranty of any kind. You are free to use, modify, and 
 * distribute this code in your projects.
 * 
 * Attribution (optional but appreciated):
 * "Generated using Verilog RAM Generator by Abhinav Kannan"
 * 
 * For more information: https://github.com/your-repo/verilog-ram-generator
 */

`;
    const codeWithCopyright = copyrightHeader + code;
    const blob = new Blob([codeWithCopyright], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="card fade-in" style={{ height: 'fit-content', minHeight: '600px' }}>
      {/* Header */}
      <div className="flex items-center justify-between p-4 border-b border-gray-200">
        <div className="flex items-center gap-3">
          <FileText className="text-primary-600" size={24} />
          <div>
            <h2 className="text-xl font-semibold">Generated Verilog Code</h2>
            <p className="text-sm text-gray-600">
              Professional-grade {ramConfig.size} RAM implementation
            </p>
          </div>
        </div>
        
        <div className="flex gap-2">
          <button
            onClick={() => handleCopy(currentCode, activeTab)}
            className="btn btn-secondary"
            title={`Copy ${activeTab} code`}
          >
            {copied === activeTab ? (
              <Check size={18} className="text-green-600" />
            ) : (
              <Copy size={18} />
            )}
            {copied === activeTab ? 'Copied!' : 'Copy'}
          </button>
          
          <button
            onClick={() => handleDownload(currentCode, filename)}
            className="btn btn-primary"
            title={`Download ${filename}`}
          >
            <Download size={18} />
            Download
          </button>
        </div>
      </div>

      {/* Tabs */}
      <div className="flex border-b border-gray-200">
        <button
          onClick={() => setActiveTab('module')}
          className={`px-6 py-3 font-medium text-sm transition-colors ${
            activeTab === 'module'
              ? 'border-b-2 border-primary-500 text-primary-600 bg-primary-50'
              : 'text-gray-600 hover:text-gray-800 hover:bg-gray-50'
          }`}
        >
          <div className="flex items-center gap-2">
            <FileText size={16} />
            RAM Module
          </div>
        </button>
        
        <button
          onClick={() => setActiveTab('testbench')}
          className={`px-6 py-3 font-medium text-sm transition-colors ${
            activeTab === 'testbench'
              ? 'border-b-2 border-primary-500 text-primary-600 bg-primary-50'
              : 'text-gray-600 hover:text-gray-800 hover:bg-gray-50'
          }`}
        >
          <div className="flex items-center gap-2">
            <TestTube size={16} />
            Testbench
          </div>
        </button>
      </div>

      {/* File Info */}
      <div className="px-4 py-2 bg-gray-50 border-b border-gray-200 text-sm text-gray-600">
        <div className="flex items-center justify-between">
          <span>üìÅ {filename}</span>
          <span>{currentCode.split('\n').length} lines</span>
        </div>
      </div>

      {/* Code Editor */}
      <div style={{ height: '500px' }}>
        <Editor
          height="100%"
          defaultLanguage="verilog"
          value={currentCode}
          theme="vs-dark"
          options={{
            readOnly: true,
            minimap: { enabled: true },
            fontSize: 13,
            lineNumbers: 'on',
            scrollBeyondLastLine: false,
            automaticLayout: true,
            wordWrap: 'on',
            fontFamily: 'Fira Code, Monaco, Cascadia Code, Roboto Mono, monospace',
            fontLigatures: true,
            renderWhitespace: 'selection',
            bracketPairColorization: { enabled: true },
            guides: {
              bracketPairs: true,
              indentation: true,
            },
          }}
          loading={
            <div className="flex items-center justify-center h-full">
              <div className="text-gray-500">Loading editor...</div>
            </div>
          }
        />
      </div>

      {/* Code Statistics */}
      <div className="p-4 border-t border-gray-200 bg-gray-50">
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
          <div>
            <div className="text-gray-500">Lines of Code</div>
            <div className="font-semibold">{currentCode.split('\n').length}</div>
          </div>
          <div>
            <div className="text-gray-500">Characters</div>
            <div className="font-semibold">{currentCode.length.toLocaleString()}</div>
          </div>
          <div>
            <div className="text-gray-500">Language</div>
            <div className="font-semibold">SystemVerilog</div>
          </div>
          <div>
            <div className="text-gray-500">Type</div>
            <div className="font-semibold capitalize">{activeTab}</div>
          </div>
        </div>
        
        {/* Copyright Notice */}
        <div className="mt-4 pt-4 border-t border-gray-300">
          <div className="flex items-center justify-between">
            <div className="text-xs text-gray-600">
              <p className="mb-1">
                <span className="font-medium">¬© 2025 Abhinav Kannan</span> ‚Ä¢ Generated code is free to use
              </p>
              <p>
                üìÑ <strong>License:</strong> MIT License (Educational & Commercial use permitted)
              </p>
            </div>
            <div className="text-xs text-gray-500 text-right">
              <p>Download includes copyright header</p>
              <p>No attribution required</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CodeDisplay;
